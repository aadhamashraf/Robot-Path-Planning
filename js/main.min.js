var grid,headerSize,dragging,activeAlgorithm,solved=!1,solving=!1,distance=0,steps=0,drawing=!1;dragging=!1;var speed,stopSolve=!1,stopGenerate=!1,colSize=35;
window.onload=function(){grid=new Grid;headerSize=parseInt(getComputedStyle(document.documentElement).getPropertyValue("--header-height").replace("px",""));speed=document.getElementById("speed");var a=document.getElementById("solveAlgorithm"),b=document.getElementById("mazeAlgorithm"),c=document.getElementById("heuritics"),d=document.getElementById("mazeGeneratorDescription"),e=document.getElementById("solveAlgorithmDescription"),f=document.getElementById("heuriticsDescription");console.log(a,b,c,
d,e,f);document.onmouseup=function(){grid.mouseDown=!1;if(dragging&&solved)switch(console.log("solving fast..."),a.value){case "A":console.log("A*");solveAStarFast();break;case "dijkstra":console.log("Dijkstra"),solveDijkstraFast()}dragging=!1};b.addEventListener("change",function(a){a=document.querySelector('option[value="'+a.target.value+'"]').dataset.desc;d.innerHTML=a});a.addEventListener("change",function(a){a=document.querySelector('option[value="'+a.target.value+'"]');var b=a.dataset.heuretics;
e.innerText=a.dataset.desc;"true"===b?(c.classList.remove("hide"),f.classList.remove("hide")):(c.classList.add("hide"),f.classList.add("hide"))});c.addEventListener("change",function(a){a=document.querySelector('option[value="'+a.target.value+'"]').dataset.desc;console.log(a);f.innerText=a});var g=document.createEvent("HTMLEvents");g.initEvent("change",!1,!0);a.dispatchEvent(g);c.dispatchEvent(g);b.dispatchEvent(g);document.getElementById("reset").onclick=function(){grid.resetGrid()};document.getElementById("stop").onclick=
function(){solving&&(stopSolve=!0);finished||(stopGenerate=!0)};document.getElementById("solve").onclick=function(){switch(a.value){case "A":solveAStar();break;case "dijkstra":solveDijkstra()}};document.getElementById("solveFast").onclick=function(){switch(a.value){case "A":solveAStarFast();break;case "dijkstra":solveDijkstraFast()}};document.getElementById("generateMaze").onclick=function(){switch(b.value){case "backtracker":generateMaze_backtracker();break;case "backtrackerMulti":generateMaze_backtracker_multi();
break;case "huntAndKill":generateMaze_huntAndKill();break;case "recursiveDivision":generateMaze_recursiveDivision()}}};window.onresize=function(){grid.resetGridSize()};
var Grid=function(){var a=this;this.dom=document.getElementById("grid");this.grid=[];this.resetGridSize();this.start=new Start(this,Math.floor(this.cols/3),Math.floor(this.rows/2));this.end=new End(this,Math.floor(2*this.cols/3),Math.floor(this.rows/2));this.mouseDown=!1;this.lastCol=null;this.top=this.dom.offsetTop;this.dom.onmousedown=function(b){a.mouseDown=!0;a.lastCol=a.getMouseColHover(b);a.lastCol&&("start"===a.lastCol.type||"end"===a.lastCol.type?dragging=a.lastCol.type:a.lastCol.toggleWall())};
this.dom.onmousemove=function(b){if(a.mouseDown)if(b=a.getMouseColHover(b),!1!==dragging){if(solving)return console.log("solving, can't move"),!1;var c;"start"===dragging?c=a.start:"end"===dragging&&(c=a.end);b!==a.lastCol&&!1!==b&&(a.lastCol=b,c.setCol(b))}else b!==a.lastCol&&!1!==b&&"start"!==b.type&&"end"!==b.type&&(c=a.lastCol.type,a.lastCol=b,a.lastCol.setType(c))}};
Grid.prototype.getMouseColHover=function(a){var b=Math.floor(a.x/colSize);a=Math.floor((a.y-this.top)/colSize);return this.grid[a]&&this.grid[a][b]?"start"===dragging&&"end"===this.grid[a][b].type||"end"===dragging&&"start"===this.grid[a][b].type?!1:this.grid[a][b]:!1};
Grid.prototype.resetGridSize=function(){this.width=this.dom.offsetWidth;this.height=this.dom.offsetHeight;this.top=this.dom.offsetTop;this.cols=Math.floor(this.width/colSize);for(this.rows=Math.floor(this.height/colSize);this.grid.length>this.rows;)for(var a=this.grid.pop(),b=0;b<a.length;b++)a[b].dom.remove();for(a=0;a<this.rows;a++){for(this.grid[a]||(this.grid[a]=[]);this.grid[a].length<this.cols;)b=new Col(this.grid[a].length,a),this.grid[a].push(b),a<this.grid.length-1?this.dom.insertBefore(b.dom,
this.grid[a+1][0].dom):this.dom.appendChild(b.dom);for(;this.grid[a].length>this.cols;)this.grid[a].pop().dom.remove()}};Grid.prototype.resetGrid=function(){this.start.setCol(this.grid[Math.floor(this.rows/2)][Math.floor(this.cols/3)]);this.end.setCol(this.grid[Math.floor(this.rows/2)][Math.floor(2*this.cols/3)]);this.resetSolving(!0)};
Grid.prototype.resetSolving=function(a){a=void 0===a?!1:a;solving&&(stopSolve=!0);finished||(stopGenerate=!0);for(var b=0;b<this.grid.length;b++)for(var c=0;c<this.grid[b].length;c++)if("wall"!==this.grid[b][c].type||a)this.grid[b][c].setType("empty"),this.grid[b][c].visited=!1;this.start.setCol(this.grid[this.start.y][this.start.x]);this.end.setCol(this.grid[this.end.y][this.end.x]);solved=solving=!1;distance=steps=0;drawing=!1};Grid.prototype.getGrid=function(){return this.grid.slice(0)};
var Col=function(a,b){var c=this;this.dom=document.createElement("div");this.dom.classList.add("col");this.dom.style.width=colSize+"px";this.dom.style.height=colSize+"px";this.type="empty";this.visited=!1;this.setType("empty");this.x=a;this.y=b;this.dom.ondragover=function(a){a.preventDefault()};this.dom.ondrop=function(a){dragging.setCol(c);if(solving&&"start"===dragging.dom.id)switch(clearInterval(search),activeAlgorithm){case "A":solveAStar();break;case "dijkstra":solveDijkstra()}if(solved)switch(activeAlgorithm){case "A":solveAStarFast();
break;case "dijkstra":solveDijkstraFast()}}};Col.prototype.toggleWall=function(){"wall"===this.type?this.setType("empty"):this.setType("wall")};Col.prototype.setType=function(a){this.dom.classList.remove(this.type);this.type=a;this.dom.classList.add(this.type)};var Start=function(a,b,c){this.dom=document.createElement("span");this.dom.innerHTML="&Alpha;";this.dom.id="start";this.setCol(a.grid[c][b])};Start.prototype.getCol=function(){return grid.grid[this.y][this.x]};
Start.prototype.setCol=function(a){this.x&&this.y&&grid.grid[this.y][this.x].setType("empty");this.x=a.x;this.y=a.y;a.dom.appendChild(this.dom);a.setType("start");a.dom.classList.remove("active")};var End=function(a,b,c){this.dom=document.createElement("span");this.dom.innerHTML="&Omega;";this.dom.id="end";this.setCol(a.grid[c][b])};End.prototype.getCol=function(){return grid.grid[this.y][this.x]};
End.prototype.setCol=function(a){this.x&&this.y&&grid.grid[this.y][this.x].setType("empty");this.x=a.x;this.y=a.y;a.dom.appendChild(this.dom);a.setType("end");a.dom.classList.remove("active")};function found(a){distance=a.length;document.getElementById("info").innerHTML="<span>Steps taken: "+steps+"</span><span>Distance: "+distance+"</span>";solved=!0;solving=!1;for(var b=0;b<a.length;b++)a[b].setType("empty");setTimeout(function(){draw(a,0)},400)}
function draw(a,b){0===b&&(drawing=!0);if(!a[b]||!drawing)return drawing=!1;a[b].setType("path");grid.start.getCol().setType("start");grid.end.getCol().setType("end");setTimeout(function(){draw(a,b+1)},map(speed.value,0,100,6E3,500)/a.length)}function map(a,b,c,d,e){return(a-b)/(c-b)*(e-d)+d};
