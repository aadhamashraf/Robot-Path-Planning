var $jscomp={scope:{}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,d){if(d.get||d.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[b]=d.value)};$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.SYMBOL_PREFIX="jscomp_symbol_";
$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol)};$jscomp.symbolCounter_=0;$jscomp.Symbol=function(a){return $jscomp.SYMBOL_PREFIX+(a||"")+$jscomp.symbolCounter_++};
$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var a=$jscomp.global.Symbol.iterator;a||(a=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator"));"function"!=typeof Array.prototype[a]&&$jscomp.defineProperty(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return $jscomp.arrayIterator(this)}});$jscomp.initSymbolIterator=function(){}};$jscomp.arrayIterator=function(a){var b=0;return $jscomp.iteratorPrototype(function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}})};
$jscomp.iteratorPrototype=function(a){$jscomp.initSymbolIterator();a={next:a};a[$jscomp.global.Symbol.iterator]=function(){return this};return a};$jscomp.makeIterator=function(a){$jscomp.initSymbolIterator();var b=a[Symbol.iterator];return b?b.call(a):$jscomp.arrayIterator(a)};$jscomp.arrayFromIterator=function(a){for(var b,d=[];!(b=a.next()).done;)d.push(b.value);return d};$jscomp.arrayFromIterable=function(a){return a instanceof Array?a:$jscomp.arrayFromIterator($jscomp.makeIterator(a))};
var active,endCord,paths,activePath,step,path,pathStep,heuritics;function solveAStar(){console.log("solving A*");heuritics=document.getElementById("heuritics").value;grid.resetSolving();solving=!0;active=grid.grid[grid.start.y][grid.start.x];endCord={x:grid.end.x,y:grid.end.y};paths=[{path:[active],dist:Math.sqrt(Math.pow(active.x-endCord.x,2)+Math.pow(active.y-endCord.y,2))}];activePath=paths[0];aStarStep()}
function aStarStep(){var a=0;if(stopSolve)return stopSolve=!1;if(0<=active.y-1){var b=grid.grid[active.y-1][active.x];if(("empty"===b.type||"end"===b.type)&&!b.visited){steps++;b.visited=!0;"end"!==b.type&&b.setType("activeSearch");var d=endCord.x-b.x,e=endCord.y-b.y,c={path:[].concat($jscomp.arrayFromIterable(activePath.path)),dist:0};c.path.push(b);c.dist=Math.sqrt(d*d+e*e);paths.push(c);a++}}active.x+1<grid.cols&&(b=grid.grid[active.y][active.x+1],"empty"!==b.type&&"end"!==b.type||b.visited||(steps++,
b.visited=!0,"end"!==b.type&&b.setType("activeSearch"),d=endCord.x-b.x,e=endCord.y-b.y,c={path:[].concat($jscomp.arrayFromIterable(activePath.path)),dist:0},c.path.push(b),c.dist=Math.sqrt(d*d+e*e),paths.push(c),a++));active.y+1<grid.rows&&(b=grid.grid[active.y+1][active.x],"empty"!==b.type&&"end"!==b.type||b.visited||(steps++,b.visited=!0,"end"!==b.type&&b.setType("activeSearch"),d=endCord.x-b.x,e=endCord.y-b.y,c={path:[].concat($jscomp.arrayFromIterable(activePath.path)),dist:0},c.path.push(b),
c.dist=Math.sqrt(d*d+e*e),paths.push(c),a++));0<=active.x-1&&(b=grid.grid[active.y][active.x-1],"empty"!==b.type&&"end"!==b.type||b.visited||(steps++,b.visited=!0,"end"!==b.type&&b.setType("activeSearch"),d=endCord.x-b.x,e=endCord.y-b.y,c={path:[].concat($jscomp.arrayFromIterable(activePath.path)),dist:0},c.path.push(b),c.dist=Math.sqrt(d*d+e*e),paths.push(c),a++));"start"!==active.type&&active.setType("searched");paths.shift();if(0===paths.length)return document.getElementById("info").innerHTML=
"<span>Steps taken: "+steps+"</span>",alert("No route"),solving=!1,solved=!0,!1;paths.sort(function(a,b){return"distanceAndLength"===heuritics?a.dist+a.path.length-(b.dist+b.path.length):a.dist-b.dist});for(a=1;a<activePath.path.length;a++)activePath.path[a].setType("searched");activePath=paths[0];active=activePath.path[activePath.path.length-1];if("end"===active.type)return found(activePath.path),!0;for(a=1;a<activePath.path.length;a++)activePath.path[a].setType("path");setTimeout(aStarStep,map(speed.value,
0,100,500,20))}
function solveAStarFast(){console.log("solving A*");grid.resetSolving();solving=!0;heuritics=document.getElementById("heuritics").value;for(var a=grid.grid[grid.start.y][grid.start.x],b=grid.end.x,d=grid.end.y,e=[{path:[a],dist:Math.sqrt(Math.pow(a.x-b,2)+Math.pow(a.y-d,2))}],c=e[0],m=!1;!m;){var l=0;if(0<=a.y-1){var f=grid.grid[a.y-1][a.x];if(("empty"===f.type||"end"===f.type)&&!f.visited){steps++;f.visited=!0;"end"!==f.type&&f.setType("activeSearch");var h=b-f.x,k=d-f.y,g={path:[].concat($jscomp.arrayFromIterable(c.path)),dist:0};
g.path.push(f);g.dist=Math.sqrt(h*h+k*k);e.push(g);l++}}a.x+1<grid.cols&&(f=grid.grid[a.y][a.x+1],"empty"!==f.type&&"end"!==f.type||f.visited||(steps++,f.visited=!0,"end"!==f.type&&f.setType("activeSearch"),h=b-f.x,k=d-f.y,g={path:[].concat($jscomp.arrayFromIterable(c.path)),dist:0},g.path.push(f),g.dist=Math.sqrt(h*h+k*k),e.push(g),l++));a.y+1<grid.rows&&(f=grid.grid[a.y+1][a.x],"empty"!==f.type&&"end"!==f.type||f.visited||(steps++,f.visited=!0,"end"!==f.type&&f.setType("activeSearch"),h=b-f.x,k=
d-f.y,g={path:[].concat($jscomp.arrayFromIterable(c.path)),dist:0},g.path.push(f),g.dist=Math.sqrt(h*h+k*k),e.push(g),l++));0<=a.x-1&&(f=grid.grid[a.y][a.x-1],"empty"!==f.type&&"end"!==f.type||f.visited||(steps++,f.visited=!0,"end"!==f.type&&f.setType("activeSearch"),h=b-f.x,k=d-f.y,g={path:[].concat($jscomp.arrayFromIterable(c.path)),dist:0},g.path.push(f),g.dist=Math.sqrt(h*h+k*k),e.push(g),l++));"start"!==a.type&&a.setType("searched");e.shift();if(0===e.length){document.getElementById("info").innerHTML=
"<span>Steps taken: "+steps+"</span>";alert("No route");solving=!1;m=solved=!0;break}e.sort(function(a,b){return"distanceAndLength"===heuritics?a.dist+a.path.length-(b.dist+b.path.length):a.dist-b.dist});for(a=1;a<c.path.length;a++)c.path[a].setType("searched");c=e[0];a=c.path[c.path.length-1];if("end"===a.type){found(c.path);m=!0;break}for(l=1;l<c.path.length;l++)c.path[l].setType("path")}}
function solveDijkstra(){console.log("solving Dijkstra");grid.resetSolving();solving=!0;active=grid.grid[grid.start.y][grid.start.x];active.visited;paths=[[active]];step=0;pathStep=paths.length-1;path=[].concat($jscomp.arrayFromIterable(paths[pathStep]));dijkstraStep()}
function dijkstraStep(){if(stopSolve)return stopSolve=!1;for(var a=1;a<path.length-1;a++)path[a].setType("searched");if(!paths[pathStep])return document.getElementById("info").innerHTML="<span>Steps taken: "+steps+"</span>",alert("No route"),solving=!1,solved=!0,!1;path=[].concat($jscomp.arrayFromIterable(paths[pathStep]));a=path[path.length-1];a.setType("searched");added=!1;if(0<=a.y-1||0!==step){if(0===step){var b=grid.grid[a.y-1][a.x];if("empty"!==b.type||b.visited){if("end"===b.type)return found(path),
!1;step++}else b.visited=!0,b.setType("activeSearch"),path.push(b),paths.push(path),added=!0,steps++}}else step++;if(a.x+1<grid.cols||1!==step){if(1===step)if(b=grid.grid[a.y][a.x+1],"empty"!==b.type||b.visited){if("end"===b.type)return found(path),!1;step++}else b.visited=!0,b.setType("activeSearch"),path.push(b),paths.push(path),added=!0,steps++}else step++;if(a.y+1<grid.rows||2!==step){if(2===step)if(b=grid.grid[a.y+1][a.x],"empty"!==b.type||b.visited){if("end"===b.type)return found(path),!1;step++}else b.visited=
!0,b.setType("activeSearch"),path.push(b),paths.push(path),added=!0,steps++}else step++;if(0<=a.x-1&&3===step)if(a=grid.grid[a.y][a.x-1],"empty"===a.type&&!a.visited)a.visited=!0,a.setType("activeSearch"),path.push(a),paths.push(path),added=!0,steps++;else if("end"===a.type)return path.push(a),found(path),!1;step++;3<step&&(paths.splice(pathStep,1),pathStep--,step=0,0>pathStep&&(pathStep=paths.length-1));for(a=1;a<path.length-1;a++)path[a].setType("path");setTimeout(dijkstraStep,map(speed.value,0,
100,500,20))}
function solveDijkstraFast(){solving=!1;grid.resetSolving();var a=grid.grid[grid.start.y][grid.start.x];a.visited;for(var a=[[a]],b=a.length-1;;){if(!a[b]){document.getElementById("info").innerHTML="<span>Steps taken: "+steps+"</span>";alert("No route");solving=!1;solved=!0;break}var d=[].concat($jscomp.arrayFromIterable(a[b])),e=d[d.length-1];e.setType("searched");added=!1;if(0<=e.y-1){var c=grid.grid[e.y-1][e.x];if("empty"===c.type&&!c.visited)steps++,c.visited=!0,c.setType("activeSearch"),d.push(c),
a.push(d);else if("end"===c.type){found(d);break}}d=[].concat($jscomp.arrayFromIterable(a[b]));if(e.x+1<grid.cols)if(c=grid.grid[e.y][e.x+1],"empty"===c.type&&!c.visited)steps++,c.visited=!0,c.setType("activeSearch"),d.push(c),a.push(d);else if("end"===c.type){d.push(c);found(d);break}d=[].concat($jscomp.arrayFromIterable(a[b]));if(e.y+1<grid.rows)if(c=grid.grid[e.y+1][e.x],"empty"===c.type&&!c.visited)steps++,c.visited=!0,c.setType("activeSearch"),d.push(c),a.push(d);else if("end"===c.type){found(d);
break}d=[].concat($jscomp.arrayFromIterable(a[b]));if(0<=e.x-1)if(e=grid.grid[e.y][e.x-1],"empty"===e.type&&!e.visited)steps++,e.visited=!0,e.setType("activeSearch"),d.push(e),a.push(d);else if("end"===e.type){found(d);break}a.splice(b,1);b--;0>b&&(b=a.length-1)}};
